import{_ as e,c as t,o,Q as r}from"./chunks/framework.5f28ab71.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"framework-design/7-vue中的html是真实的html吗.md","lastUpdated":1709451841000}'),l={name:"framework-design/7-vue中的html是真实的html吗.md"},c=r('<h2 id="_7-vue-中的-html-是真实的-html-吗" tabindex="-1">7-.vue 中的 html 是真实的 html 吗？ <a class="header-anchor" href="#_7-vue-中的-html-是真实的-html-吗" aria-label="Permalink to &quot;7-.vue 中的 html 是真实的 html 吗？&quot;">​</a></h2><p>我们首先需要先思考一个问题：<strong>在 .vue 文件的 template 中写入的 html 是真实的 html 标签节点吗？</strong></p><p>答案是：不是的！</p><p>原因非常简单，如果我们写入的是真实 <code>html</code> 节点，对于 <code>v-if、v-bind、keep-alive</code> 这些东西，浏览器明显是 <strong>不认识</strong> 的，所以这些东西理应无法解析。</p><p>但是现实是这些指令或组件被正确解析了，所以 <strong>vue 一定在中间做了什么</strong>，让 <strong>假的 html 标签节点</strong> 被渲染成了 <strong>真实的 html 标签节点</strong>。</p><p>那么 <code>Vue</code> 在中间做了什么事情呢？</p><p>简单来说可以分成两件事（排序按执行顺序）：</p><ol><li>编译时：<code>compiler</code></li><li>运行时：<code>runtime</code></li></ol><p>这两个东西对于大家而言，可能比较陌生，但是在 <a href="https://cn.vuejs.org/guide/extras/reactivity-in-depth.html#runtime-vs-compile-time-reactivity" target="_blank" rel="noreferrer">Vue 官网</a> 中早就提到了这几个概念。</p><p>这些概念一共有三个，如果我们想要学习 <code>Vue</code> 的框架设计，那么必须要了解它们，它们分别是：</p><ol><li>运行时：<code>runtime</code></li><li>编译时：<code>compiler</code></li><li>运行时 + 编译时：<code>runtime + compiler</code></li></ol><p>这些概念并不是在 <code>Vue</code> 中才存在的概念，而是早就存在的。</p><p>那么这些东西分别是什么意思呢？</p>',13),i=[c];function a(d,n,m,p,s,_){return o(),t("div",null,i)}const v=e(l,[["render",a]]);export{u as __pageData,v as default};
