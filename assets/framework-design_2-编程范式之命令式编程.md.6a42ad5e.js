import{_ as s,c as n,o as a,Q as l}from"./chunks/framework.5f28ab71.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"framework-design/2-编程范式之命令式编程.md","lastUpdated":1709451841000}'),p={name:"framework-design/2-编程范式之命令式编程.md"},o=l(`<h2 id="编程范式之命令式编程" tabindex="-1">编程范式之命令式编程 <a class="header-anchor" href="#编程范式之命令式编程" aria-label="Permalink to &quot;编程范式之命令式编程&quot;">​</a></h2><p>针对于目前的前端开发而言，主要存在两种 <strong>编程范式</strong>：</p><ol><li>命令式编程</li><li>声明式编程</li></ol><p>这两种 <strong>范式</strong> 一般是相对来去说的。</p><h3 id="命令式" tabindex="-1">命令式 <a class="header-anchor" href="#命令式" aria-label="Permalink to &quot;命令式&quot;">​</a></h3><p>那么首先我们先来说什么叫做 <strong>命令式</strong>。</p><p>具体例子：</p><blockquote><p>张三的妈妈让张三去买酱油。</p><p>那么张三怎么做的呢？</p><ol><li>张三拿起钱</li><li>打开门</li><li>下了楼</li><li>到商店</li><li>拿钱买酱油</li><li>回到家</li></ol></blockquote><p>以上的流程详细的描述了，张三在买酱油的过程中，每一步都做了什么。那么这样一种：<strong>详细描述做事过程</strong> 的方式就可以被叫做 <strong>命令式</strong>。</p><p>那么如果把这样的方式放到具体的代码实现之中，又应该怎么做呢？</p><p>我们来看以下这样的一个事情：</p><blockquote><p>在指定的 div 中展示 “hello world”</p></blockquote><p>那么如果想要完成这样的事情，通过命令式的方式我们如何实现呢？</p><p>我们知道命令式的核心在于：<strong>关注过程</strong>。</p><p>所以，以上事情通过命令式实现则可得出以下逻辑与代码：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1. 获取到指定的 div</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> divEle </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2. 为该 div 设置 innerHTML 为 hello world</span></span>
<span class="line"><span style="color:#A6ACCD;">divEle</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerHTML </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>该代码虽然只有两步，但是它清楚的描述了：<strong>完成这件事情，所需要经历的过程</strong></p><p>那么假如我们所做的事情，变得更加复杂了，则整个过程也会变得更加复杂。</p><p>比如：</p><blockquote><p>为指定的 div 的子元素 div 的子元素 p 标签，展示变量 msg</p></blockquote><p>那么通过命令式完成以上功能，则会得出如下逻辑与代码：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1. 获取到第一层的 div</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> divEle </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2. 获取到它的子 div</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> subDivEle </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> divEle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3. 获取第三层的 p</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> subPEle </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> subDivEle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">p</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 4. 定义变量 msg</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> msg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 5. 为该 p 元素设置 innerHTML 为 hello world</span></span>
<span class="line"><span style="color:#A6ACCD;">subPEle</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerHTML </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>那么通过以上例子，相信大家可以对命令式的概念有了一个基础的认识。</p><p>最后做一个总结，什么叫做命令式呢？</p><p>命令式是：<strong>关注过程</strong> 的一种编程范式，他描述了完成一个功能的 <strong>详细逻辑与步骤</strong>。</p>`,25),e=[o];function t(r,c,i,D,y,F){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{A as __pageData,u as default};
