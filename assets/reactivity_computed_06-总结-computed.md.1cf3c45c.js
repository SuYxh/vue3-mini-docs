import{_ as e,c as o,o as c,Q as d}from"./chunks/framework.5f28ab71.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"reactivity/computed/06-总结-computed.md","lastUpdated":1709451841000}'),t={name:"reactivity/computed/06-总结-computed.md"},a=d('<h2 id="_06-总结-computed" tabindex="-1">06-总结-computed <a class="header-anchor" href="#_06-总结-computed" aria-label="Permalink to &quot;06-总结-computed&quot;">​</a></h2><p>那么到这里已经完成了 <code>computed</code> 计算属性的构建。</p><p>接下来我们来总结一下计算属性实现的重点：</p><ol><li>计算属性的实例，本质上是一个 <code>ComputedRefImpl</code> 的实例</li><li><code>ComputedRefImpl</code> 中通过 <code>dirty</code> 变量来控制 <code>run</code> 的执行和 <code>triggerRefValue</code> 的触发</li><li>想要访问计算属性的值，必须通过 <code>.value</code> ，因为它内部和 <code>ref</code> 一样是通过 <code>get value</code> 来进行实现的</li><li>每次 <code>.value</code> 时都会触发 <code>trackRefValue</code> 即：收集依赖</li><li>在依赖触发时，需要谨记，先触发 <code>computed</code> 的 <code>effect</code>，再触发非 <code>computed</code> 的 <code>effect</code></li></ol>',4),_=[a];function i(l,p,r,u,m,s){return c(),o("div",null,_)}const h=e(t,[["render",i]]);export{f as __pageData,h as default};
