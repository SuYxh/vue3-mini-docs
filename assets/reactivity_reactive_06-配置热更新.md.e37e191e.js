import{_ as s,c as e,o as a,Q as n}from"./chunks/framework.5f28ab71.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"reactivity/reactive/06-配置热更新.md","lastUpdated":1709451841000}'),o={name:"reactivity/reactive/06-配置热更新.md"},p=n(`<h2 id="_06-配置热更新" tabindex="-1">06-配置热更新 <a class="header-anchor" href="#_06-配置热更新" aria-label="Permalink to &quot;06-配置热更新&quot;">​</a></h2><p>在之前，我们每次想要进行测试，都需要重新执行一遍 <code>pnpm build</code> ，那么未免有些过于麻烦了。</p><p>那么有没有办法可以让我们的项目提供一个具备 <strong>热更新</strong> 的开发时呢？</p><p>答案当然是可以的，并且非常简单。</p><p>目前在 <code>package.json</code> 中，我们只提供了一个 <code>build</code> 指令：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rollup -c</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用 <code>build</code> 可以打包项目，那么我们可以在提供一个 <code>dev</code> 指令：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rollup -c -w</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>rollup -c -w</code> 表示：<strong>-c 读取配置文件，-w 监听源文件是否有改动，如果有改动，重新打包</strong></p><p>那么这样我们就可以得到一个 <code>dev</code> 的热更新状态。</p><p>执行 <code>pnpm dev</code>，然后修改源代码，可以发现：<strong>项目就被重新打包了</strong></p>`,11),t=[p];function l(c,r,d,i,u,_){return a(),e("div",null,t)}const y=s(o,[["render",l]]);export{m as __pageData,y as default};
