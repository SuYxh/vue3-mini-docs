import{_ as s,c as n,o as a,Q as p}from"./chunks/framework.5f28ab71.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"framework-design/13-良好的TypeScript支持.md","lastUpdated":1709451841000}'),l={name:"framework-design/13-良好的TypeScript支持.md"},e=p(`<h2 id="_13-良好的-typescript-支持-是如何提供的" tabindex="-1">13-良好的 <code>TypeScript</code> 支持，是如何提供的？ <a class="header-anchor" href="#_13-良好的-typescript-支持-是如何提供的" aria-label="Permalink to &quot;13-良好的 \`TypeScript\` 支持，是如何提供的？&quot;">​</a></h2><p>目前在网上对于 <code>vue3</code> 的讨论是非常多的，看到过类似的如下内容：</p><blockquote><p>说：“vue 3 对 ts 支持比较好，是因为 vue 3 本身是使用 ts 编写的”<strong>（PS：这是一个错误的概念）</strong></p></blockquote><h3 id="良好的-typescript-支持-是如何提供的" tabindex="-1">良好的 <code>TypeScript</code> 支持，是如何提供的？ <a class="header-anchor" href="#良好的-typescript-支持-是如何提供的" aria-label="Permalink to &quot;良好的 \`TypeScript\` 支持，是如何提供的？&quot;">​</a></h3><p><a href="https://www.typescriptlang.org/" target="_blank" rel="noreferrer">typescript（简称：ts）</a> 是微软发布的一个 <code>js</code> 的超集，大家可以理解为这是一个包含类型的 <code>JavaScript</code>。</p><p>我们来看如下通过 <code>ts</code>来书写的一个例子：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 使用 ts 声明了一个方法，他期望接受两个数字，并且会返回两者相加的和</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">s1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">s2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">s1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">s2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 触发 sum 方法，但是我们传入了两个字符串</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> total </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sum</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>以上的代码通过 <code>ts</code> 进行编写，我们期望接收的 <code>s1</code> 和 <code>s2</code> 应该是两个 <code>number</code>，并且返回值也应该是一个 <code>number</code>。</p><p>但是我们却发现，当我们传入了两个字符串时，代码并没有报错，并且会返回一个 <code>12</code>。这样的结果将会是一个非常令人疑惑的行为。</p><p>接下来我们可以把 <code>sum</code> 方法进行一下修改：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 使用 ts 声明了一个方法，他期望接受两个数字，并且会返回两者相加的和</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">s1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">s2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">s1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">s2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 触发 sum 方法，但是我们传入了两个字符串</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> total </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sum</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>此时大家就可以发现，在 <code>sum(&#39;1&#39;, &#39;2&#39;)</code> 处，会抛出一个错误，它很明确的告诉了我们：<strong>参数应该是一个 <code>number</code></strong></p><p>那么这样的例子告诉了我们：<code>ts</code> 编写的程序和 <code>ts</code>类型支持友好是两回事情。如果想要让你的程序拥有更好地 <code>ts</code> 支持，那么你需要做很多额外的事情。</p><p><code>vue</code> 为了拥有良好的 <code>ts</code> 类型支持，<code>vue</code> 内部其实做了非常多的事情，比如（截图来自：<code>packages/runtime-core/src/componentPublicInstance.ts</code> 这样的代码有很多，决不仅限于一个文件）：</p><p><img src="https://qn.huat.xyz/mac/202403021749857.jpg" alt="图片描述"></p><p>这些代码存在的目的只是为了进行更好地 <code>ts</code> 支持，所以说想要得到一个良好的 <code>ts</code> 支持，是需要进行非常多的努力的。</p>`,16),o=[e];function t(c,r,i,y,D,F){return a(),n("div",null,o)}const u=s(l,[["render",t]]);export{C as __pageData,u as default};
